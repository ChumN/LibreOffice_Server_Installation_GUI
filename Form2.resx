<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZgAAACJCAYAAAARxi7fAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAB3dSURBVHhe7Z1Ljx1HFcf9DfwR8hEcZlYZI0VC4OywAIkV4BUiC9AgBCwQYIkNESxmASg2mEwc
        EQK2w9igEAkERgixiRTvIrEaRUKs7uXu7YhLnTpd3dXV9a7qvt13/pGu7LhfVb/urtPnfekS/gMBEAAB
        EAABEAABEAABEAABEAABEAABEAABEAABEAABEAABEAABEAABEAABEACBJRH41M83L750a3187dbq7KVb
        q8f679rt9U3a9ok7/31uSXPCWEEABEAABHZIgISGECbnQoBsY36fenV98snb/728wyHj0iAAAiAAAnMm
        QIKFtRUWLNdeXW9IeFy7vbphG/e1W5srpOXIfV5dPaG/z3l+GBsIgAAIgEAhgY8eHV1/9vDqydOHVx/r
        v2cPj86ePnrhePvOUc+sRdoHCQldWyFBkyIw1DlSjimcJg4HARAAARCYigAJlqcPj54I4bKN+J1s/3x4
        mQQCaR+d1rJ6QppJ7phJ24FfJpcejgMBEACBkQjQws7O89Vj0iBosZYmKO3nWryf/f6FFyOESk/w/PO3
        X2v9LGQOo2vXmBq0mBoUcQ4QAAEQqECgb6JanadqENs/fPyKEC6bFAHzr/tf2H729oeNr6VMa3H5Zyqg
        wSlAAARAAARyCZBwUSYq8oPknEeYxc5ThMv7977SCpev3vnn+fv3vlzdOU/zQmRZzt3EMSAAAiBQgQAt
        wFo48HHOKT96dPVGinB5963vtaHHX//lP8hfs6FAgJxrh46BgAkRwnYQAAEQGIkAJy6KcOBb69PcS5Bw
        iBUwNuGijiUzW+4YcBwIgAAIgMCMCJADX+WalHzp1xAudA4KX54RHgwFBEAABEAgl0CpaUxdN0bA+DSX
        9vhHR1UiyHQeMviAotu0HzSl3CcGx4EACIBABIGXbm2uq7yTEu2FLhUSMOTQV9cih74z2qySgKHcGhF0
        cOqLaqOgBJnwKfaNwIVdQAAEQAAEYgmQz4UX/VWxc92XWKmHIr985z3KgXGGMlOSZuz4XfulBhyMFVxQ
        Og8cDwIgAAKLJaDMYzUSG6kkjEOL2ZBQIUFG+S7rt1/yhjKXahN0fGouDo1bme9kLTNZrmZTLOgW+2Bg
        4CAAAiBQSkCZrGpkvFNdMZuA+eHrD9os/Q/uf8mbhEkmrdI5pUSzmeN98OYrRtVmkWwqqgqUmg9L54Tj
        QQAEQGBRBJoeK3JBrbWAPhP+E33R/tNb32mFCy3eAT/NJkd74ZL+62My833/9I+x9c+cY/nma3+ztAZI
        r2qwqIcBgwUBEACBmgR0B3/N8zaO9e3md9c2qgQMLdpB4ZKY/0Lh1XpJfxKUHz74XFIlAduY9Eg3swdN
        LUFckzfOBQIgAAKzI9B0gqzi4DcnR5FZFCmm/C7/fvszTgFDwQGxmossZ8NFOAdNyJpqACFBFtxOY3U3
        NysPhpjdg4ABgQAIgEBtAmMKGN389vfffMO1qJM/RpbqD82NG5CpiDfVhKxzxpPgSY0c82lUvu6ZrqZn
        oTlgOwiAAAhcGAJjCRgumrneqPBnSm6UjcfIP9P8SBjkCBZZyl8IGluVZ9P/E8rL8W3X+9KYwoa2XZiH
        BBMFARAAgRgCMnxXLPAqX+Xur37amIJWstskbTM7TMac19xH94vkNvySQqqnsVCtNH/YMJnlSoSKduxG
        ryxt02ZS2xjkcMQxIAACILAIAo35qBci3DmzV3qRyk1JLTBV10zWNstsGsbnYB+LbHYW2dWy6UUT9LGE
        hdDRGd1U2XSt1cTYLNd22xRjXMSNxyBBAARAYEwCLtNRV7pldW72cckRMtJP0pnGzlPnRAu6qupMf5If
        J7WXS2o/GpuwIWGsxt6ZEU0BU6fjZioj7A8CIAACsyHgc3zrtcFsyYn6QhszId2klZK4aXTRlIIl5nq2
        faSvR2Tl5/7IfKift8mxGUSV5WpnufPCcSAAAiAwKwIhk5EejuvKfo+tOMzaRxPdJcxasSDIr8JaD2ss
        ruNShI7Kw8kQMhvbfG0h0RAwsXcY+4EACOwlgWcPj85Ci6wSCucPPu/IgGd/ROi/tmGZEBYxjn3WDMhx
        T6VY4vwZKUImNaJM5uI4Ej07s53ug4GJLPRMYDsIgMAeEwgJF9quMu3/+ptvObtRhhDpOS/klKf/p59N
        0KhEycZXk9RYjCPLNtHdLklgRPpkTnxztAkYKk0T4oLtIAACILCXBGRjrQhfhKq79ZM3XneXWBHnCizA
        bVa9Eir0pxI0tBjT39lHIzQWoeVwtWL17/FCgxMu4/encbMf6uiMzID6TyZ5igKdoQfAJmBStKnQ+bEd
        BEAABBZFIFbAqFyYb7/2F3eVY4+A6YUlCwFig8Sax+qMFmpdqyFBIQUP1RQTIc30I8EjQ5Pl/1OtsaEw
        Ib/NlDXBbAJmyusv6sHDYEEABPafQKyAoTIuTcZ9lgajZ7zbTGJSgIjM91g/i7ozLHhkzbHHTRDAuczg
        F0JHRZ1NdRdNJz8y+acij+uAAAjMkkDTdCsYrqtHkrkqEbtKuvR9L0PtRWkjMU7/EESZ9Cg1GjazSVOb
        1IrWx6kms9C19O0kzMxMfppXyjmwLwiAAAjsHQFfC2PdP/PFX3wgtZjf//oHAzOZmReiQ9JNR7oQ6Uxi
        4znCeeHfXG8z/ptQZ2laS/TR+G683tKgC8NO8wHt3YOFCYEACFw8AqZfILa68I/u3pMC5gevPxoIGFey
        pZ73QoJG0ebyKqLKcUGyZMqdUyYzpd3olQRqCJsmGEFLtFwlVyhImQ/2BQEQAIHZEXCVVInJhVE1yShk
        uR955s6BsWXtq0V+Sge4Cnvua1YieZP8NVrZGjKl5Yxr4H/JrK82uwcGAwIBEACBGAK+xZP8JyFTmeg8
        2X6hf3D/S1KL8TUB6/slWHthbcEeRRYzh5J9VLizeQ4WPsJvIzSqzo8iggaaQIHQNXUfkzo+R0iFroPt
        IAACIDA7AiqaKmbRC2W2v3znPSlkfvbGKQmXU1+vFr0AJOe3sLN9l4BoDD4O0nTHodJcpdnTV6Yz9xkN
        znYkQHfJFdcGARC4oARU1nzs9Cl02VVz7MGbr7ThyqHzdYu0CD9OKKcfOm/JdpXI6TuH8gvp7QBUUzQz
        jNoWPVYzeKBkrjgWBEAABEYlIM1CmeGylL0u82S034/v3hc5J6pYpTtKqp9Y6dcaRgVgOTlrVu6mZGbg
        gUXQiLpo65v96s7pBTynnjeuBwIgAALVCKiWxDGmsZSLKqe4z5eid6usff2Usdr2VV0obePy1TEzBY2t
        yViNXJ7S+eF4EAABEBidAGkvemhwrQuqkFxaYG3n1Huj7MqhH5qrLP9vifSKMW9xQAC1DjCai8H3EsKO
        7SAAAvtCQPpeMs1jPgY9AWIpoW869+fK0+bwj83L6ef3KEHTr6E213ljXCAAAiBQTEDW5xopH0NvWawP
        lGuKqa/7eScb2hz+sQLGUZpfBkCMxbz4gcAJQAAEQKAWgTEXO92Jr/wOzVe9MMvxF/0Y2lMtNuo8ZMJT
        45dO+4jKAmbei4yQ6+XQUHjz6gn8MbXvFs4HAiAwGwJSwCS0JU4duNJUSJComl+6eWwJC6zqmElz90WW
        KTY8T86RUdWlVbCAXrVA5dDEnDOVO/YHARAAgZ0TkEmCDkd8jcEpYaJfQ899qXGNKc5BgkH1mwldz6w5
        Zg9pNpz/I5kpQ2PFdhAAARAYjUAXKuzO+Si5uOns1x3fS/JDKC0m1IvGNI25TIC6+bDLGdpNeZyS+4tj
        QQAEQMBJgMOU6Wu6q2JcE5fKJ1GmIv3rPibct+ZYSs/FARGrG67zqJyiVmAIH4vvmjYhQ9eYW05QKTcc
        DwIgcEEJGIti9RpgnEuyumHmg5CZbGnIVYMy17j1qDEyCcb4l3R/VKxgWho3jBcEQOACE9D9JDW1Ct33
        MChVv8CEQ9lVk3xWgbweGR0XEWmmHjlbOPNck08v8GuCqYMACOQS6EJoV+c1TDSmoBpqMeP4fHLnHzqO
        82E2V9jE19e+LBpakiZomtZaTcZjjguNF9tBAARAYDYEuHskJz+SsCkVMrbjdS2m9PxTg1MtBFTQgtJi
        dG4c8p3nqO98YV10Gd2PpXGa+r7geiAAAgshUFvImNPWBUwoGmtuyPSIN+WLMYVLaaAEapfN7a5jPCAA
        AlUJkFNedzYrRzU1DRPdKU9EA7Hzfivkq9QaWXSuPDr76NFVZ4SVHq6sEgyX8nXOodWdSU+FIvcFQrlp
        0cyfUfchJlig6kOAk4EACIDAWARk5FdrLltv3n3ruzctQoUEy+An2yP/4eNXhtpLJ7g6H8P65lhzqHle
        Wy5LTxuTHS3dfW9ix2Jrq9ywSvLpxF4P+4EACIDATgiY5p+7v/qpVaA4hMy52Sa5l/+ilbGf+9c5937p
        +1XMci8pEWO+m2lqeVqpmcc7eQhwURAAARAYi4AQKje++drfmnpa6+3Ld97b/uv+FyIFzdGZPi49FLf/
        pT5OgmctJmZny0EtsUynvmt8w3whmQS7uJyhWvxxHhAAgT0kQBoImbtIQ3nw5ivbz97+sBU00dqMaKOs
        0Jhf4/2Fer4hy7rjXh8z13BbPam5+Ls1mPV2Dx8xTAkEQOCiEiCHvW7+Is2FNBglKL74iw+27771Pa82
        8/ThVWna0TUWZW6ixVTvCTNHhz/5opT/ZSBcKKy7rVBQR0DaKx5Q2Li9K+hFfTYxbxAAgYUTIOFg86+Q
        9qKbcUjQ+MxmpAnpOR69cF9RQXjODn/SXqQgFGawLrKuc+hzWf567Q5cDcrGbKew8McUwwcBEFgiAV/U
        2L/f/sz25uk7PUHzo7v3tvTvg+OEmayr2Dzs5NiLxqoQiVWLNWtdorilJlxorIMKBaKXDgmZUg3ME0Em
        ul+6C2zWmi/OAwIgAAKTEYgJS37/3le2ehAALbQD05kQMKaDX59Ez3wWqD482eTFhXjMXdMwV1a90s5K
        hYBZq03XmEqF15TccC0QAAEQCBKIETBqH5egoeCA9+99WQiYrvyJLaS3F8I8g6/1QbtjT2vjtnRMQVdQ
        MzJN57WknjnBhwo7gAAIgAARUBFkqYKGTGX2UFsWMravcb3FcGyZ+7HuEgcfUHQYj5cW/5AGobSP0H62
        MXuFy4w0urF447wgAAIXkMDTRy8cpwgXfV/yxZCg0UObNaFzbMt6N0vU7AK5rJisJYHGFq5UPqYUM1kj
        VIUZrt86WTeNzT0JdRf3CNcEARDYAwJN7TFRY2xYDib23/7z9qdPXPW16KuftukmM18wwNhIzWrGKcKi
        9cNEJl2S2ctW2NJWA27seeP8IAACILATAmYuTKxgof1kTTIZoqwXz6R2AJ3jvB/6K0OBm/bNyjxVXt8r
        BI5LwXAkmCrCmVr6pfPZuDPu5XVk3sxw/j2fixhLjqktNE9sBwEQAIHZERCC4jRFsDT7blTBy35LYC4L
        oxIYg4vtyP1QuN5a52+RAkZoF6k3QeXD0PGmWavZJgSnX7BIjS6hC2bqGLE/CIAACMySwEePjq5zSf4Y
        c9nRmV7o0iZg9ElyKXzSXCgs2O6P4PyT1ZmqC1bDN6FXjK4REqwECGkpUnDRn4bwss9PzC1DqM3yQcGg
        QAAEQCCHwPado+d82gz1ibH1g9GjpGxl7/Wx8Ne+aBUgkxsDpiTpjOdESFrM6es/VvD0hR5rLbK2WOJC
        T9ej63JwQF8T8kXS8TY5P5Thz3kYcQwIgMB+EpDOf5E8qf9s/V/U7HtJlsKpH0vF1ac+vHBzy2cpfEhw
        iJ8SAlIQGP4WWuQ7IShqjzUCo3cMaSPNuRrh59G2XFoYCxV5nhlVLIi9H9gPBEAABGZHoG/6SivN35jP
        tLwaFgAkFDg6zWdW8y3002zjSDE5Rmto9uxuFgYEAiAAAksiUCJgaJ56hWFpxrJ8/dO/Se2EtJVW8ISc
        6mMKmc31WHPdku4lxgoCIAACsyJQKmCkkHFUMw5N1Mw3UYECrbmr8Zu0/6/MYN4/7f4e3a+DaLDQncF2
        EAABENAI5H6R1xAwUsjo5VscmowaLufe6BoM/b3fs0WZ30KBB7EPgS5gUpI0Y8+P/UAABEBgbwnkfpXr
        AqakcZbp9CeBYyYkstDo+2VstcT4XNyNslZSY1/ApOfS7O2Dg4mBAAiAQIiAqQGE9u+0if6CH3ucbT/T
        6a+EDGfjd03BmjDgxy6hqCLJcoWmdWwzb55Wwh3HggAIgMCoBMjsk/O1P9Qoysq/DNsKi9BfrUAlm8bc
        LYyVplG7S2TPTxRZk2zUG4aTgwAIgMBSCKjs9NTxDjWL8v71zt71QovwCcFOA6pnGrNramnh2KlMsT8I
        gAAI7B2B2PL1+sTNrPkSpzoXjLRXIiZzmS+BkeuOUV7KelvTNKbmamhRsuYa/gMBEAABEIgkQMIhNUJK
        r6bM1YpXTyIv1+4mS7LI/BYzd8Vw6EsBMtSQ9IZmJQLONe6Bb6igu2UqG+wPAiAAAntBgNsDU+HJeD+K
        2X7YVnHYBkcrb98ry8LJlutTFTZtM5eZNcVUiHOOcIu5ccNeMogii+GGfUAABECgR0CWPXFoCi5Upubh
        04K4XpgoYNlz3Hd1vGz5OFYh0/RVabtNivPl5vKEHoEaJf9D17Bt3146vLG9dHDzf5cOH0/xo2vZf4fH
        20sfu5IzBxwDAvtOQLynl8X78eL20vPX3e8QvVv0Hh1edvEQ53iuOf5Uve90zN7xU+Yq0hRiFu1hpeGu
        MRdrRVxB2dblkYMEwoEBZrvjFKFWcoNsGlqqGTHn+ixcDrdz+/3v0sE5vUw5c5rbMSQ0Bd8z8VI/6XM+
        2CxFoO7DHOb2XMSMRxMGxrMTfGfPXOfnd8t2/B5+3PUSCwNCYBhJ1lY8ppL1WjFL1clSdpg8Tg2L1h35
        /fOOF9WlV2du+8okmBBjHla79kJfRMGHdWcCiL6wli5o3C/04Za25d67KY/bhzlMyav0WqytHJzmvpv0
        3rgFDL1TVgGzFx90g3nLBV0rfx9TSt/ZdKvp65IqVMxBmUEF3fVWj2O0rZQHzKa90PVSzpG7L6vc8xUw
        3dgOTnPnuOvjQnx3Pb6Y6+/DHGLmOYd9GuGSqrEYH4Hu94U/2i6QgFE3lRZu1mjSyueTqa1UoOgPVlMq
        xqoVcQTbelPrmi5tqXYCp8ce6xEw9AXl8pfk/7vNzxNawHj7QXIb6pksGMI85hTiTlPGHMauxsAmvmXP
        YU48fWMJsJZaLwuJgxOPP9Ppg7mwAibmAbCbyeo53geRXJQXI9sWc+6L/lPdK3OFm0+QTeF/Id5+DWZa
        Hwjbmw+PfeYY2ifmOZnbPua8mjkuyrG6D3OY23Nhjoe1F5cgJx9e+TsJAeN5CobNw9SiX5ZV34ROG6HM
        XSFM1jTs7YyVRhNrOuNqBqSp2XvJlBTzTH2B5iRgtK/lyx4hk7Qod5E3ZArUfxRpE6uFyeg24/i0F70b
        h37dMqeqbUz6v6U+C6H992EO4TnSR455r0NRW/pzVPqc+EzWNI7h+Y1/s36A9fcxg01agWZ9zs1rhhgu
        frvbhJaWW0MgXFn9ZKKyaSY+waASQDk6btg2mbWjsPnPzL8Z84bNUcDQfN0Cxm8mU1E3jQlBRGmN6V86
        2PB1nr8eMHmQw9YxFr9G1oSkynDS9LkcJCcju02p0um86DnY5sbRcQcneXxTni1iJ532N0hQB54Xw5+S
        ch21L78ndC2/RSDn3NJcLbQp/zzGXLdGPbfLKa78I7SQhwZAJihZUcBm+hKBAj6zl03byQ9MGFQVmDSq
        aK4CxmMmsPphGtMCaSX04Fd4QdPO0US7WXN4/GaPoSbUOHlvuhf0+LGF3oPY7fswB32u6nkZZ/EN3R8p
        bJz+xBrPr4pOHDeIJ02Lj33WZrFfKOpM9bGXeTF6Z0kZreZug5xSAmbYkKysfbKrlfOYwPdBwNAcdrNQ
        WBeSG/YvZdei039J60QQtV+xm5rPjnvhW84c+Kv+Y1fm8bzYtYAaAoYCBZq5CtNuSODlbt9jASMjziza
        R64mwQ77lXVx8L2kvsKZKWPZhXAJP4C7e4BiNZjG5DC5xuJ/aYcms/jFOSf34eCJIzIv+XnOM92YAmbO
        cyA/RuqCyqbQ0C9Tex5EEaaPz5yPTOBtc1oyxxV4p+qZX2t+BFU9l9vhn6pJlOe2aDXPnOHNboFTfv1c
        sEvWYJqvfZ+f5YwFUJ3IsyabXZyPy+q4FgJb8mS8gHGHArM/RjqBvTb83GchdNzS5xD2Ryg/SZ3npfuA
        o+fFlT1P93ugAToW9zoffIgiCz3p2nZXT5cY7SG1FlrssDhxlErTuE1x0l+kFduMPXft/eYoYAJaSetf
        c+8nwzlHD2duHMRWn495n2IW5yZM27W4jD6f0LO19DmEnqsxBbff9HlwYviHIGBCD+OU230hxI6MfwpH
        Ti4hkzsn2SZAFN/Uf7nnqn3cnASMigDzmwg6wcFhxvF+kNrs6Hyur8EcAcNfvHG+mjHmEjpn7Nhi9wtd
        r/Z21/PiK6tScwycGDm8v+b1x+YHDSbzrsqESHbi9/JZVPhwbFHNzMsv8jC/gLHb9kO26JztcRFT5pee
        S8BMl/HvWgzqC5jp5uR6kGMXvlj/2dQvzK4FjHth79/bWM65/CBgcsnhuGQC44YxpjpTffsPayu5NZjp
        FuPaAsafj0GmPxKqwWQ74aex75P8gGgHxC58c50DBAzfTAiYkrcAxyYRmL+Akcl9jtBfuwajajXlaFKp
        x9QWMNPfDym0TsU8RA5RbgKg6aSeuoBq3BwgYCBgkhZH7FxOYPoFLUqrEdFfUniIiC1f4ySnD2bnYcu5
        JrLGD0OL/Y7mIIWNNUotVoOZ6xwgYCBgyldMnCGJQF0Bo8I8Y2t86fulh+B6nPw7Wpw7oVAiYHiBfv76
        7pIBZR7FIGotRcDMcQ4QMBAwSYsjdi4nEHDyi6/Z9NIrjY3Xq32Uj5wW4blqMAeDDPrUxVnx4fsjy7Jb
        w6HH0nRskVVLnwMEDARMjXUH50ggEBOm3BUE9CWLOUuMCyHlLwaZMNzerh4nf1Tmdaq/JXZ/8meUajAu
        Jnwvcp38g6rA9AFBPi5X3kWvtlqugBmy2M0cIGAgYHLXGhyXSSBGwOinbr6oAwuTbcFqs6StBSFzhr/r
        BSNlzLUW55RrxuxL/pbYytVLn8OunxeEKcc8kdhnrwikCpi+sJFfxOQUTvJ58IImw22LstN9GkwoImrq
        mzjXxZl9JS4tpq95Ln0OEDDQYKZ+7y/89UoETOcnkF34yOcior/ShE3jW8jy1zShtQ7h5u5JvoubPu/F
        Oa56wNLn4BYw0vQ7an23OWmKyIPZxQpwQa9ZQ8AYJrTneOHPckqTgIquAOyv3XUoepdTQcqyrpG1Hou5
        Ls7+QIk+u6XPoSlW6vogEUEUdYpJWnxOFKjhCdJAscta7xnOMzMCtQXMUNhQt8DU4IDWX9OWHHc7vWNM
        dCoRzxc+LcOki0x2vlubsjg3C6HQ6nLCvaOPCdyXski4uc4h3LlSdSmN5ihMva59SaP3BVHQR9DBoMFg
        yrOSs5xAg8mhhmOyCIwpYAxhI6KfSBj4Xzjz5er8Nc7kP2Gey9KWHF+yY0W8xZqh7AUR002PqabKwf7Z
        kXAcVl18/SS/nuN6tjlUfl5K5inzjQZBLxAwWUsZDpojgakEjD04IEXYuBscsX07p2e9NdrN2cq25P7F
        Lhr15lG08J3a5roPc+CgBukzzPAXljAdNAUjk5yrxbZDuNYx4UGDKXmTcWwSgV0ImNzggNDEmnwdoSWV
        LATjFMpcwuLM2qJbg9uHOdi06umEuvygCvoZYzmH3gfXdgiYXHI4LotAkylOD7/25TRtS9Tmq9IaHND4
        cBKc//SFqpIKD8/4hYrRluwlUrKgGgc1dvogYx53iYBMPVb6p4RJK/x1vA9zcPvy9EjImiZXea6gUOkL
        PunTCT4ruc+lvQzRtO977thxHAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiA
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiA
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiA
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAjsksD/Ad5DMBCBbfJPAAAAAElFTkSuQmCC
</value>
  </data>
</root>